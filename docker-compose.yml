version: '3.8'

services:

  wordpress:
    container_name: wordpress-wpd
    restart: unless-stopped
    build:
      dockerfile: Dockerfile # this line is actually redundant here - you need it only if you want to use some custom name for your Dockerfile
      #context: ./xdebug # a path to a directory containing a Dockerfile, or a url to a git repository

    ports:
      - "8008:80"

    environment:
      #VIRTUAL_HOST: mydomain.com, www.mydomain.com
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      # Set the XDEBUG_CONFIG as described here: https://xdebug.org/docs/remote
      XDEBUG_CONFIG: client_host=192.168.1.151

    depends_on:
      - db

    volumes:
      - ./wordpress:/var/www/html
      - ./plugins:/var/www/html/wp-content/plugins

    networks:
      - backend-wpd
      - frontend-wpd


  db:
    container_name: mysql-wpd
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      #MYSQL_RANDOM_ROOT_PASSWORD: '1' # You can use this instead of the option right above if you do not want to be able login to MySQL under root
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

    ports:
      -  "3306:3306" # I prefer to keep the ports available for external connections in the Development environment to be able to work with the database
      # from programs like e.g. HeidiSQL on Windows or DBeaver on Mac.

    volumes:
      - db_data1:/var/lib/mysql

    networks:
      - backend-wpd


  phpmyadmin:
    container_name: phpmyadmin-wpd
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    ports:
      - "8088:80" # Map port 8080 on the host to port 80 in the container
    environment:
      PMA_HOST: db # Use the service name of your MySQL service
      PMA_USER: wordpress # MySQL user
      PMA_PASSWORD: wordpress # MySQL password
      MYSQL_ROOT_PASSWORD: somewordpress # Root password, if needed
    depends_on:
      - db
    networks:
      - backend-wpd # Connect to the same network as MySQL for direct access


volumes:
  db_data1: {}

networks:
  frontend-wpd:
  backend-wpd: